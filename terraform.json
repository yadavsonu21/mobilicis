# Define AWS as provider
provider "aws" {
  region = "us-east-1"
}

# Create new VPC
resource "aws_vpc" "example_vpc" {
  cidr_block = "10.0.0.0/16"
}

# Create internet gateway and attach to VPC
resource "aws_internet_gateway" "example_igw" {
  vpc_id = aws_vpc.example_vpc.id
}

# Create public subnet for load balancer
resource "aws_subnet" "public_subnet" {
  vpc_id            = aws_vpc.example_vpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-east-1a"
}

# Create security group allowing traffic on port 80
resource "aws_security_group" "web_sg" {
  name_prefix = "web_sg_"
  vpc_id      = aws_vpc.example_vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Launch two EC2 instances in private subnets
resource "aws_instance" "ec2_instance_1" {
  ami           = "ami-0c94855ba95c71c99"
  instance_type = "t2.micro"
  count         = 2

  subnet_id             = aws_subnet.private_subnet.*.id[count.index % length(aws_subnet.private_subnet.*.id)]
  associate_public_ip_address = false
  vpc_security_group_ids = [aws_security_group.web_sg.id]

  tags = {
    Name = "web-server-${count.index + 1}"
  }
}

# Create target group for load balancer
resource "aws_lb_target_group" "example_tg" {
  name_prefix     = "example-tg-"
  port            = 80
  protocol        = "HTTP"
  vpc_id          = aws_vpc.example_vpc.id

  health_check {
    path = "/"
  }
}

# Register EC2 instances with target group
resource "aws_lb_target_group_attachment" "attachment" {
  target_group_arn = aws_lb_target_group.example_tg.arn
  count            = length(aws_instance.ec2_instance_1.*.id)

  target_id = aws_instance.ec2_instance_1.*.id[count.index]
}

# Create load balancer
resource "aws_lb" "example_lb" {
  name               = "example-lb"
  security_groups    = [aws_security_group.web_sg.id]
  subnets            = [aws_subnet.public_subnet.id]
  load_balancer_type = "application"

  tags = {
    Name = "example-lb"
  }

  listener {
    port     = 80
    protocol = "HTTP"

    default_action {
      type             = "forward"
      target_group_arn = aws_lb_target_group.example_tg.arn
    }
  }
}
